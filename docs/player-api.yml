swagger: '2.0'

info:
  title: Player API
  version: '0.7'

host: localhost:8880
basePath: /api

produces:
- application/json

tags:
- name: player
  description: Player APIs
- name: playlists
  description: Playlist APIs
- name: query
  description: Query APIs
- name: browser
  description: File browser APIs
- name: artwork
  description: Artwork metadata APIs

paths:

  /player:
    get:
      operationId: getPlayerState
      summary: Get player state
      tags: [ player ]
      parameters:
      - name: columns
        in: query
        description: Active item columns to return
        type: array
        items:
          type: string
        collectionFormat: csv
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              player:
                $ref: '#/definitions/PlayerState'
    post:
      operationId: setPlayerState
      summary: Set player state
      tags: [ player ]
      parameters:
      - name: request
        in: body
        description: Request to modify player state
        required: true
        schema:
          $ref: '#/definitions/SetPlayerStateRequest'
      responses:
        204:
          description: Success

  /player/play:
    post:
      operationId: playCurrent
      summary: Play current item
      tags: [ player ]
      responses:
        204:
          description: Success

  /player/play/{playlistId}/{index}:
    post:
      operationId: playItem
      summary: Play specific playlist item
      tags: [ player ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: index
        description: Item index
        in: path
        required: true
        type: string
      responses:
        204:
          description: Success

  /player/play/random:
    post:
      operationId: playRandom
      summary: Play random item in currently played playlist
      tags: [ player ]
      responses:
        204:
          description: Success

  /player/next:
    post:
      operationId: playNext
      summary: Play next item in currently played playlist
      tags: [ player ]
      parameters:
      - name: by
        description: Expression to select next item by (e.g. %artist%).
        in: query
        type: string
      responses:
        204:
          description: Success

  /player/previous:
    post:
      operationId: playPrevious
      summary: Play previous item in currently played playlist
      tags: [ player ]
      parameters:
      - name: by
        description: Expression to select previous item by (e.g. %artist%).
        in: query
        type: string
      responses:
        204:
          description: Success

  /player/stop:
    post:
      operationId: stop
      summary: Stop player
      tags: [ player ]
      responses:
        204:
          description: Success

  /player/pause:
    post:
      operationId: pause
      summary: Pause player
      tags: [ player ]
      responses:
        204:
          description: Success

  /player/pause/toggle:
    post:
      operationId: togglePause
      summary: Toggle pause state
      tags: [ player ]
      responses:
        204:
          description: Success

  /playlists:
    get:
      operationId: getPlaylists
      summary: Get playlists
      tags: [ playlists ]
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              playlists:
                $ref: '#/definitions/PlaylistsResult'
    post:
      operationId: updatePlaylists
      summary: Update playlist collection
      tags: [ playlists ]
      parameters:
      - name: current
        description: Playlist id or index to make current
        in: query
        type: string
      responses:
        204:
          description: Success

  /playlists/add:
    post:
      operationId: addPlaylist
      summary: Add playlist
      tags: [ playlists ]
      parameters:
      - name: index
        description: Position to add playlist at.
          By default playlist is added to the last position
        in: query
        type: number
      - name: title
        description: New playlist title
        in: query
        type: string
      responses:
        204:
          description: Success

  /playlists/remove/{playlistId}:
    post:
      operationId: removePlaylist
      summary: Remove playlist
      tags: [ playlists ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      responses:
        204:
          description: Success

  /playlists/move/{playlistId}/{index}:
    post:
      operationId: movePlaylist
      summary: Move playlist to new position
      tags: [ playlists ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: index
        description: Target position.
          Use negative value to move to the last position
        in: path
        required: true
        type: string
      responses:
        204:
          description: Success

  /playlists/{playlistId}/items/{range}:
    get:
      operationId: getPlaylistItems
      summary: Get playlist items
      tags: [ playlists ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: range
        description: Playlist item range in form offset:count
        in: path
        required: true
        type: string
      - name: columns
        description: Item columns to return
        in: query
        required: true
        type: array
        items:
          type: string
        collectionFormat: csv
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              playlistItems:
                $ref: '#/definitions/PlaylistItemsResult'

  /playlists/{playlistId}:
    post:
      operationId: updatePlaylist
      summary: Update playlist
      tags: [ playlists ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: title
        description: New playlist title
        in: query
        type: string
      responses:
        204:
          description: Success

  /playlists/{playlistId}/clear:
    post:
      operationId: clearPlaylist
      summary: Clear playlist
      tags: [ playlists ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      responses:
        204:
          description: Success

  /playlists/{playlistId}/items/add:
    post:
      operationId: addPlaylistItems
      summary: Add playlist items
      tags: [ playlists ]
      consumes: [ application/json ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: request
        in: body
        description: Items to add
        required: true
        schema:
          $ref: '#/definitions/AddItemsRequest'
      responses:
        202:
          description: Asynchronous request accepted for processing
        204:
          description: Success

  /playlists/{playlistId}/items/copy:
    post:
      operationId: copyPlaylistItems
      summary: Copy playlist items
      tags: [ playlists ]
      consumes: [ application/json ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: targetIndex
        description: Position to copy items to.
          Items are copied to the end of the playlist by default
        in: query
        type: number
      - name: request
        in: body
        description: Indexes of items to copy
        required: true
        schema:
          $ref: '#/definitions/ItemIndexesRequest'
      responses:
        204:
          description: Success

  /playlists/{sourceId}/{targetId}/items/copy:
    post:
      operationId: copyPlaylistItemsEx
      summary: Copy playlist items between playlists
      tags: [ playlists ]
      consumes: [ application/json ]
      parameters:
      - name: sourceId
        description: Source playlist id or index
        in: path
        required: true
        type: string
      - name: targetId
        description: Target playlist id or index
        in: path
        required: true
        type: string
      - name: targetIndex
        description: Playlist position to copy items to.
          Items are copied to the end of the playlist by default
        in: query
        type: number
      - name: request
        in: body
        description: Indexes of items to copy
        required: true
        schema:
          $ref: '#/definitions/ItemIndexesRequest'
      responses:
        204:
          description: Success

  /playlists/{playlistId}/items/move:
    post:
      operationId: movePlaylistItems
      summary: Move playlist items
      tags: [ playlists ]
      consumes: [ application/json ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: targetIndex
        description: Position to move items to.
          Items are moved to the end of the playlist by default
        in: query
        type: number
      - name: request
        in: body
        description: Indexes of items to move
        required: true
        schema:
          $ref: '#/definitions/ItemIndexesRequest'
      responses:
        204:
          description: Success

  /playlists/{sourceId}/{targetId}/items/move:
    post:
      operationId: movePlaylistItemsEx
      summary: Move playlist items between playlists
      tags: [ playlists ]
      consumes: [ application/json ]
      parameters:
      - name: sourceId
        description: Source playlist id or index
        in: path
        required: true
        type: string
      - name: targetId
        description: Target playlist id or index
        in: path
        required: true
        type: string
      - name: targetIndex
        description: Position to move items to.
          Items are moved to the end of the playlist by default
        in: query
        type: number
      - name: request
        in: body
        description: Indexes of items to move
        required: true
        schema:
          $ref: '#/definitions/ItemIndexesRequest'
      responses:
        204:
          description: Success

  /playlists/{playlistId}/items/remove:
    post:
      operationId: removePlaylistItems
      summary: Remove playlist items
      tags: [ playlists ]
      consumes: [ application/json ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: request
        in: body
        description: Indexes of items to remove
        required: true
        schema:
          $ref: '#/definitions/ItemIndexesRequest'
      responses:
        204:
          description: Success

  /playlists/{playlistId}/items/sort:
    post:
      operationId: sortPlaylistItems
      summary: Sort playlist items
      tags: [ playlists ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: by
        description: Expression to sort by (e.g. %title%)
        in: query
        type: string
      - name: desc
        description: Sort in descending order
        in: query
        type: boolean
      - name: random
        description: Sort randomly
        in: query
        type: boolean
      responses:
        204:
          description: Success

  /query:
    get:
      operationId: query
      tags: [ query ]
      parameters:
      - name: player
        description: Request player state
        in: query
        type: boolean
      - name: trcolumns
        in: query
        description: Active item columns to return
        type: array
        items:
          type: string
        collectionFormat: csv
      - name: playlists
        description: Request playlists
        in: query
        type: boolean
      - name: playlistItems
        description: Request playlist items
        in: query
        type: boolean
      - name: plref
        in: query
        description: Playlist id or index to return items from
        type: string
      - name: plrange
        in: query
        description: Playlist range to return items from
        type: string
      - name: plcolumns
        in: query
        description: Playlist item columns to return
        type: array
        items:
          type: string
        collectionFormat: csv
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              player:
                $ref: '#/definitions/PlayerState'
              playlists:
                $ref: '#/definitions/PlaylistsResult'
              playlistItems:
                $ref: '#/definitions/PlaylistItemsResult'

  /browser/roots:
    get:
      operationId: getFsRoots
      summary: Get file system roots
      tags: [ browser ]
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              pathSeparator:
                type: string
              roots:
                type: array
                items:
                  $ref: '#/definitions/FileSystemEntry'

  /browser/entries:
    get:
      operationId: getFsEntries
      summary: Get file system entries
      tags: [ browser ]
      parameters:
      - name: path
        description: Directory path
        in: query
        type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              pathSeparator:
                type: string
              entries:
                type: array
                items:
                  $ref: '#/definitions/FileSystemEntry'

  /artwork/{playlistId}/{index}:
    get:
      operationId: getArtwork
      summary: Get artwork for specific playlist item
      tags: [ artwork ]
      parameters:
      - name: playlistId
        description: Playlist id or index
        in: path
        required: true
        type: string
      - name: index
        description: Item index
        in: path
        required: true
        type: string
      responses:
        200:
          description: Success

definitions:

  PlaybackState:
    type: string
    enum: [ stopped, playing, paused ]

  VolumeType:
    type: string
    enum: [ db, linear ]

  PlayerState:
    type: object
    properties:
      info:
        $ref: '#/definitions/PlayerInfo'
      activeItem:
        type: object
        properties:
          playlistId:
            type: string
          playlistIndex:
            type: number
          index:
            type: number
          position:
            type: number
          duration:
            type: number
          columns:
            type: array
            items:
              type: string
      playbackState:
        $ref: '#/definitions/PlaybackState'
      playbackMode:
        type: number
      playbackModes:
        type: array
        items:
          type: string
      volume:
        type: object
        properties:
          type:
            $ref: '#/definitions/VolumeType'
          min:
            type: number
          max:
            type: number
          value:
            type: number
          isMuted:
            type: boolean

  PlayerInfo:
    type: object
    properties:
      name:
        type: string
      title:
        type: string
      version:
        type: string
      pluginVersion:
        type: string

  PlaylistInfo:
    type: object
    properties:
      id:
        type: string
      index:
        type: number
      title:
        type: string
      isCurrent:
        type: boolean
      itemCount:
        type: number
      totalTime:
        type: number

  PlaylistsResult:
    type: array
    items:
      $ref: '#/definitions/PlaylistInfo'

  PlaylistItemInfo:
    type: object
    properties:
      columns:
        type: array
        items:
          type: string

  PlaylistItemsResult:
    type: object
    properties:
      offset:
        type: number
      totalCount:
        type: number
      items:
        type: array
        items:
          $ref: '#/definitions/PlaylistItemInfo'

  SetPlayerStateRequest:
    type: object
    properties:
      volume:
        type: number
        description: New volume value
      isMuted:
        type: boolean
        description: New mute state
      position:
        type: number
        description: New absolute playback position (seconds)
      relativePosition:
        type: number
        description: New relative playback position (seconds)
      playbackMode:
        type: number
        description: New playback mode index
      options:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: Option identifier
            value:
              type: number
              description: New option value
        description: Options to modify

  AddItemsRequest:
    type: object
    properties:
      index:
        type: number
        description: Position to add items at
      async:
        type: boolean
        description: Process request asynchronously
      replace:
        type: boolean
        description: Replace target playlist with specified items
      play:
        type: boolean
        description: Start playback of added items
      items:
        type: array
        items:
          type: string
        description: Items to add (files, directories, URLs)

  ItemIndexesRequest:
    type: object
    properties:
      items:
        type: array
        items:
          type: number

  FileSystemEntry:
    type: object
    properties:
      name:
        type: string
        description: File name
      path:
        type: string
        description: Full file path
      type:
        type: string
        description: File type
        enum: [ D, F ]
      size:
        type: number
        description: File size in bytes
      timestamp:
        type: number
        description: File timestamp (seconds since Unix epoch)
